plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
    id 'io.github.CDAGaming.cursegradle' version '1.6.1'
}

version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url 'https://maven.nucleoid.xyz' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Polymer
    modImplementation "eu.pb4:polymer-core:0.5.19+1.20.1"
    modImplementation "eu.pb4:polymer-resource-pack:0.5.19+1.20.1"
    modImplementation "eu.pb4:polymer-blocks:0.5.19+1.20.1"
    modImplementation "eu.pb4:polymer-autohost:0.5.19+1.20.1"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

modrinth {
    versionName = "Wlodzimiers Blocks " + project.mod_version + " - " + project.minecraft_version
    versionNumber = project.mod_version
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "wlodzimiers-blocks"
    uploadFile = remapJar
    changelog = rootProject.file("CHANGELOG").text
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_API_KEY")
    project {
        id = '952794'
        changelogType = 'markdown'
        changelog = rootProject.file("CHANGELOG").text
        releaseType = 'release'
        addGameVersion project.minecraft_version

        mainArtifact(remapJar) {
            it.displayName = "Wlodzimiers Blocks " + project.mod_version + " - " + project.minecraft_version
        }
    }
}